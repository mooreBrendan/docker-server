version: '3'

services:
  #home assistant
  homeassistant:
    extends:
      file: ./HomeAssistant/ha-compose.yml
      service: homeassistant
    depends_on:
      - traefik
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ha.rule=Host(`ha.bmoore.tech`)"
      - "traefik.http.routers.ha.entrypoints=web,websecure"
      - "traefik.http.services.ha.loadbalancer.server.port=8123"
      - "traefik.http.routers.ha.tls=true"
    extra_hosts:
      - host.docker.internal:172.17.0.1

  #obsidian notes
  obsidian:
    extends:
      file: ./obsidian/obsidian-compose.yaml
      service: obsidian
    depends_on:
      - traefik
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.obsidian.rule=Host(`obsidian.bmoore.tech`)"
      - "traefik.http.routers.obsidian.entrypoints=web,websecure"
      - "traefik.http.services.obsidian.loadbalancer.server.port=8080"
      - "traefik.http.routers.obsidian.tls=true"

  #pihole
  pihole:
    extends:
      file: ./pihole/pihole-compose.yml
      service: pihole
    environment:
      WEBPASSWORD: ${PIHOLE_PASS}
    depends_on:
      - traefik
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.rule=Host(`pihole.bmoore.tech`)"
      - "traefik.http.routers.pihole.entrypoints=web,websecure"
      - "traefik.http.routers.pihole.tls=true"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
      - "traefik.frontend.rule=HostRegexp:pihole.bmoore.tech,{catchall:.*}"
      - "traefik.frontend.priority=1"
      - "traefik.backend=pihole"

  #UPTIME KUMA
  uptime_kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    volumes:
      - uptime-kuma:/app/data
    restart: always
    depends_on:
      - traefik
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uptime.rule=Host(`uptime.bmoore.tech`)"
      - "traefik.http.routers.uptime.entrypoints=web,websecure"
      - "traefik.http.services.uptime.loadbalancer.server.port=3001"
      - "traefik.http.routers.uptime.tls=true"

  #update server
  nginx:
    extends:
      file: ./script-server/script-compose.yml
      service: nginx
    depends_on:
      - traefik
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.scripts.rule=Host(`scripts.bmoore.tech`)"
      - "traefik.http.routers.scripts.entrypoints=web,websecure"
      - "traefik.http.services.scripts.loadbalancer.server.port=80"
      - "traefik.http.routers.scripts.tls=true"

  #Watch Tower
  watch_tower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wt.rule=Host(`wt.bmoore.tech`)"
      - "traefik.http.routers.wt.entrypoints=web,websecure"
      - "traefik.http.routers.wt.tls=true"

  #Portainer
  portainer:
    image: portainer/portainer-ce:latest
    hostname: portainer
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    depends_on:
      - traefik
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.bmoore.tech`)"
      - "traefik.http.routers.portainer.entrypoints=web,websecure"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.tls=true"

  #dashy homepage
  dashy:
    extends:
      file: ./dashy/dashy-compose.yml
      service: dashy
    depends_on:
      - traefik
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashy.rule=Host(`dashy.bmoore.tech`)"
      - "traefik.http.routers.dashy.entrypoints=web,websecure"
      - "traefik.http.services.dashy.loadbalancer.server.port=8080"
      - "traefik.http.routers.dashy.tls=true"

  #ntfy notifications
  ntfy:
    extends:
      file: ./ntfy/ntfy-compose.yml
      service: ntfy
    depends_on:
      - traefik
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ntfy.rule=Host(`ntfy.bmoore.tech`)"
      - "traefik.http.routers.ntfy.entrypoints=web,websecure"
      - "traefik.http.services.ntfy.loadbalancer.server.port=80"
      - "traefik.http.routers.ntfy.tls=true"

  #traefik reverse proxy
  traefik:
    image: traefik
    container_name: traefik
    restart: unless-stopped
    ports:
      - '80:80'
      - '8081:8080'
      - '443:443'
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/certs:/certs
      - ./traefik/log:/var/log/traefik
    networks:
      traefik_net:
        ipv4_address: 172.16.16.16
    command:
      - --log.level=ERROR
      - --accesslog=true
      - --providers.docker=true
      - --providers.docker.network=traefik_net
      - --docker.exposedbydefault=false
    labels:
      - "traefik.http.routers.api.tls.domains[0].main=bmoore.tech"
      - "traefik.http.routers.api.tls.domains[0].sans=*.bmoore.tech"
      - "traefik.http.routers.api.tls.certResolver=prod"

volumes:
  uptime-kuma:
  portainer_data:


networks:
  traefik_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.16.0/24
          gateway: 172.16.16.1
